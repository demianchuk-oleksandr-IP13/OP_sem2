/*11. Визначити клас "Точка в просторі", 
членами якого є координати точки в циліндричній 
системі координат. Реалізувати для нього декілька 
конструкторів, геттери, метод обчислення відстані 
від точки до початку системи координат. 
Перевантажити оператори: префіксний "++" — для 
збільшення азимутального кута на 19, "+=" - 
для збільшення радіальної відстані р на 
вказану величину, "==" – для визначення 
рівності відповідних координат двох точок. 
Створити три точки (Р1, P2, РЗ), використовуючи 
різні конструктори. Інкрементувати азимутальний кут 
точки P1, а радіальну відстань р точки P2 збільшити 
на вказану величину. З'ясувати, чи рівні між собою 
відповідні координати цих двох точок (P1 i P2). 
Визначити відстань від точки Р3 до початку системи 
координат.*/

#include "lib.h"

int main() {
	setlocale(LC_CTYPE, "rus");
	double ro, z = 0;
	int phi = 0;
	cout << "1) Введiть координати: ";
	cout << "\tro: "; cin >> ro;
	cout << "\t\t\tphi: "; cin >> phi;
	cout << "\t\t\tz: "; cin >> z;
	cout << endl;
	cPoint P1(ro, phi, z);
	printf("P1 (%f %d %f)\n", P1.GetRo(), P1.GetPhi(), P1.GetZ());
	string line;
	cout << "2) Введiть координати через пробiл:";
	cin.ignore();
	getline(cin, line, '\n');
	cPoint P2(line);
	printf("P2 (%f %d %f)\n", P2.GetRo(), P2.GetPhi(), P2.GetZ());
	cPoint P3(P1);
	printf("P3 (%f %d %f)\n", P3.GetRo(), P3.GetPhi(), P3.GetZ());
	cout << "iнкрементуємо P1:\n";
	++P1;
	printf("P1 (%f %d %f)\n", P1.GetRo(), P1.GetPhi(), P1.GetZ());
	int value; cout << "Введiть значення: "; cin >> value; cout << endl;
	P2 += value;
	printf("%f %d %f\n", P2.GetRo(), P2.GetPhi(), P2.GetZ());
	cout << "P1 рiвна P2? " << (P1 == P2) << endl;
	cout << "Вiдстань вiд точки P3: " << P3.FindDistance() << endl;
}